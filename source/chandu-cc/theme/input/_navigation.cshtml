@*
  Note: -
  1. no background images for the post.
*@

@{
  // get the background image
  // TODO: the current styles do not support background images.
  string backgroundImage = null;
  if (Document.ContainsKey(WebKeys.Image))
  {
    backgroundImage = $"background-image: url(\"{Context.GetLink(Document.GetString(WebKeys.Image))}\")";
  }

  // description for the blog post
  string description = Document.WithoutSettings().GetString("Lead") ??
  Document.WithoutSettings().GetString(WebKeys.Description);

  // title of the blog post
  string title = Document.GetString("Title") ?? Document.GetString("SiteTitle");

  // blog post boolen
  bool isPost = Document.GetBool("IsPost") && title != "Tags" && title != "Archive";
}

@* Todo: refactor the razer way, loop the outputpages, *@
@* Todo: *@
<header class="">

  @* TODO: renders the chandu site name on the right side and style it *@
  @* <a class="navbar-brand" href="@Context.GetLink("/")">@Context.GetString("SiteTitle")</a> *@

  <div class="relative p-2 bg-gray-900 lg:hidden" style="min-height: 50vh;">

    <div class="flex justify-between">

      <a class="text-xl text-white" href="@Context.GetLink("/")"> @Context.GetString("SiteTitle") </a>

      <!-- navbar -->
      <a href="#" class="flex items-center space-x-2 mobile-menu-button">
        <svg class="text-white fill-current" xmlns="http://www.w3.org/2000/svg" width="20"
          height="20" viewBox="0 0 20 20">
          <path d="M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z"></path>
        </svg>
        <span class="text-xl text-white"> Menu </span>
      </a>

    </div>

     @* hero section content *@
    <div class="block py-20 pl-4 text-white bg-gray-900 lg:hidden">

      <h1 class="text-5xl font-bold"> @title </h1>

      @if (Document.GetInt(Keys.Index) > 1)
      {
        <small>(Page @Document.GetString(Keys.Index))</small>
      }

      <p class="mt-1 text-4xl font-semibold"> @description </p>

      @if (isPost)
      {
        <p class="z-50 mt-4 text-2xl"> Published on @Document.GetDateTime(WebKeys.Published).ToLongDateString()
        </p>

        <div class="mt-2">

          @if (Document.ContainsKey("Tags"))
          {
            <div class="mt-3">
              @foreach (IDocument tag in Document
                                          .GetList<string>("Tags")
                                          .Select(x => Outputs["tags.html"].First()
                                          .GetChildren()
                                          .FirstOrDefault(y => y.GetTitle()
                                          .Equals(x, StringComparison.OrdinalIgnoreCase)))
                                          .Where(x => x != null))
              {
                <a href="@Context.GetLink(tag)" class="p-1 font-semibold text-black bg-white">
                  @tag.GetTitle()
                </a>
              }
            </div>
          }

        </div>
      }

    </div>
  </div>

  <!-- dropdown -->
  <nav
    class="absolute inset-x-0 top-0 z-10 block px-10 font-semibold text-white duration-200 ease-in-out transform -translate-y-full bg-gray-900 sidebar lg:transform-none lg:my-0"
    id="menu">

    @Html.Partial("_navbar")

  </nav>

</header>
